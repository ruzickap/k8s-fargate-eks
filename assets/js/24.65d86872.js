(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{312:function(a,e,t){"use strict";t.r(e);var s=t(8),r=Object(s.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"k8s-tools"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k8s-tools"}},[a._v("#")]),a._v(" K8s tools")]),a._v(" "),e("p",[a._v("Install the basic tools, before running some applications like DNS integration\n("),e("a",{attrs:{href:"https://github.com/kubernetes-sigs/external-dns",target:"_blank",rel:"noopener noreferrer"}},[a._v("external-dns"),e("OutboundLink")],1),a._v("), Ingress ("),e("a",{attrs:{href:"https://kubernetes.github.io/ingress-nginx/",target:"_blank",rel:"noopener noreferrer"}},[a._v("ingress-nginx"),e("OutboundLink")],1),a._v("),\ncertificate management ("),e("a",{attrs:{href:"https://cert-manager.io/",target:"_blank",rel:"noopener noreferrer"}},[a._v("cert-manager"),e("OutboundLink")],1),a._v("), ...")]),a._v(" "),e("h2",{attrs:{id:"aws-load-balancer-controller"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aws-load-balancer-controller"}},[a._v("#")]),a._v(" aws-load-balancer-controller")]),a._v(" "),e("p",[a._v("Get the VPC ID where is the cluster:")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("EKS_VPC_ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("aws eks describe-cluster "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--name")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--query")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cluster.resourcesVpcConfig.vpcId"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--output")]),a._v(" text"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),e("p",[a._v("Install "),e("code",[a._v("aws-load-balancer-controller")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/aws/aws-load-balancer-controller",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/aws/eks-charts/blob/master/stable/aws-load-balancer-controller/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" eks https://aws.github.io/eks-charts\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.1")]),a._v(".1 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kube-system "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - aws-load-balancer-controller eks/aws-load-balancer-controller "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nclusterName: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v("\nserviceAccount:\n  create: false\n  name: aws-load-balancer-controller\nregion: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v("\nvpcId: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${EKS_VPC_ID}")]),a._v("\ndefaultTags:\n  "),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$TAGS")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("sed")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"s/ /'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v('  /g;s/=/: /g"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\nEOF")]),a._v("\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('"eks" has been added to your repositories\nNAME: aws-load-balancer-controller\nLAST DEPLOYED: Sat Jan  2 11:15:29 2021\nNAMESPACE: kube-system\nSTATUS: deployed\nREVISION: 1\nTEST SUITE: None\nNOTES:\nAWS Load Balancer controller installed!\n')])])]),e("h2",{attrs:{id:"cert-manager"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cert-manager"}},[a._v("#")]),a._v(" cert-manager")]),a._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),e("p",[a._v("This is not working due to Fargate specifics "),e("a",{attrs:{href:"https://github.com/jetstack/cert-manager/issues/3237",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/jetstack/cert-manager/issues/3237"),e("OutboundLink")],1)])]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("cert-manager")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/jetstack/cert-manager",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/jetstack/cert-manager/blob/master/deploy/charts/cert-manager/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".\nThe the previously created Role ARN will be used to annotate service account.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ROUTE53_ROLE_ARN_CERT_MANAGER")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("eksctl get iamserviceaccount "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cluster")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" cert-manager "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" json  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('".iam.serviceAccounts[] | select(.metadata.name=='),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("cert-manager"),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v(') .status.roleARN"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\nhelm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" jetstack https://charts.jetstack.io\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" v1.1.0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" cert-manager --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--wait")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - cert-manager jetstack/cert-manager "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\ninstallCRDs: true\nimage:\n  pullPolicy: Always\nserviceAccount:\n  annotations:\n    eks.amazonaws.com/role-arn: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${ROUTE53_ROLE_ARN_CERT_MANAGER}")]),a._v("\nextraArgs:\n  - --enable-certificate-owner-ref=true\nsecurityContext:\n  enabled: true\nEOF")]),a._v("\n")])])]),e("p",[a._v("Add ClusterIssuers for Let's Encrypt staging and production:")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-staging-dns\n  namespace: cert-manager\nspec:\n  acme:\n    server: https://acme-staging-v02.api.letsencrypt.org/directory\n    email: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_EMAIL}")]),a._v("\n    privateKeySecretRef:\n      name: letsencrypt-staging-dns\n    solvers:\n      - selector:\n          dnsZones:\n            - "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n        dns01:\n          route53:\n            region: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v("\n---\n# Create ClusterIssuer for production to get real signed certificates\napiVersion: cert-manager.io/v1\nkind: ClusterIssuer\nmetadata:\n  name: letsencrypt-production-dns\n  namespace: cert-manager\nspec:\n  acme:\n    server: https://acme-v02.api.letsencrypt.org/directory\n    email: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MY_EMAIL}")]),a._v("\n    privateKeySecretRef:\n      name: letsencrypt-production-dns\n    solvers:\n      - selector:\n          dnsZones:\n            - "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\n        dns01:\n          route53:\n            region: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v("\nEOF")]),a._v("\n")])])]),e("p",[a._v("Output:")]),a._v(" "),e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('Error from server (InternalError): error when creating "STDIN": Internal error occurred: failed calling webhook "webhook.cert-manager.io": Post https://cert-manager-webhook.cert-manager.svc:443/mutate?timeout=10s: x509: certificate is valid for ip-192-168-92-45.eu-central-1.compute.internal, not cert-manager-webhook.cert-manager.svc\nError from server (InternalError): error when creating "STDIN": Internal error occurred: failed calling webhook "webhook.cert-manager.io": Post https://cert-manager-webhook.cert-manager.svc:443/mutate?timeout=10s: x509: certificate is valid for ip-192-168-92-45.eu-central-1.compute.internal, not cert-manager-webhook.cert-manager.svc\n')])])]),e("p",[a._v("Create wildcard certificate using "),e("code",[a._v("cert-manager")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl apply "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-f")]),a._v(" - "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\napiVersion: cert-manager.io/v1\nkind: Certificate\nmetadata:\n  name: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n  namespace: cert-manager\nspec:\n  secretName: ingress-cert-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v("\n  issuerRef:\n    name: letsencrypt-"),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v('-dns\n    kind: ClusterIssuer\n  commonName: "*.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n  dnsNames:\n    - "*.'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\n    - "'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v('"\nEOF')]),a._v("\n")])])]),e("h2",{attrs:{id:"external-dns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#external-dns"}},[a._v("#")]),a._v(" external-dns")]),a._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),e("p",[a._v("This is not working - not sure why...")])]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("external-dns")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/bitnami/external-dns",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/bitnami/charts/blob/master/bitnami/external-dns/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".\n"),e("code",[a._v("external-dns")]),a._v(" will take care about DNS records.\n("),e("code",[a._v("ROUTE53_ROLE_ARN")]),a._v(" variable was defined before for "),e("code",[a._v("cert-manager")]),a._v(")")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ROUTE53_ROLE_ARN_EXTERNAL_DNS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("eksctl get iamserviceaccount "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--cluster")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_NAME}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kube-system "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-o")]),a._v(" json  "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" jq "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-r")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('".iam.serviceAccounts[] | select(.metadata.name=='),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v("external-dns"),e("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[a._v('\\"')]),a._v(') .status.roleARN"')]),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" bitnami https://charts.bitnami.com/bitnami\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[a._v("4.4")]),a._v(".1 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" external-dns --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - external-dns bitnami/external-dns "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\naws:\n  region: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${AWS_DEFAULT_REGION}")]),a._v("\ndomainFilters:\n  - "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\ninterval: 10s\npolicy: sync\nreplicas: 1\nserviceAccount:\n  annotations:\n    eks.amazonaws.com/role-arn: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${ROUTE53_ROLE_ARN_EXTERNAL_DNS}")]),a._v('\nsecurityContext:\n  allowPrivilegeEscalation: false\n  readOnlyRootFilesystem: true\n  capabilities:\n    drop: ["ALL"]\n  runAsNonRoot: true\nEOF')]),a._v("\n")])])]),e("h2",{attrs:{id:"kubed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#kubed"}},[a._v("#")]),a._v(" kubed")]),a._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[a._v("WARNING")]),a._v(" "),e("p",[a._v("This is not working due to Fargate specifics "),e("a",{attrs:{href:"https://github.com/jetstack/cert-manager/issues/3237",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/jetstack/cert-manager/issues/3237"),e("OutboundLink")],1)])]),a._v(" "),e("p",[e("code",[a._v("kubed")]),a._v(" - tool which helps with copying the certificate secretes across the\nnamespaces.")]),a._v(" "),e("p",[a._v("See the details:")]),a._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://cert-manager.io/docs/faq/kubed/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://cert-manager.io/docs/faq/kubed/"),e("OutboundLink")],1)]),a._v(" "),e("li",[e("a",{attrs:{href:"https://appscode.com/products/kubed/v0.12.0/guides/config-syncer/intra-cluster/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://appscode.com/products/kubed/v0.12.0/guides/config-syncer/intra-cluster/"),e("OutboundLink")],1)])]),a._v(" "),e("p",[a._v("Install "),e("code",[a._v("kubed")]),a._v(" "),e("a",{attrs:{href:"https://artifacthub.io/packages/helm/appscode/kubed",target:"_blank",rel:"noopener noreferrer"}},[a._v("helm chart"),e("OutboundLink")],1),a._v("\nand modify the\n"),e("a",{attrs:{href:"https://github.com/kubeops/config-syncer/blob/2310687a9ee63ba22ef272cbaaef8f7f89314183/charts/kubed/values.yaml",target:"_blank",rel:"noopener noreferrer"}},[a._v("default values"),e("OutboundLink")],1),a._v(".")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("helm repo "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" appscode https://charts.appscode.com/stable/\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--version")]),a._v(" v0.12.0 "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" kubed --create-namespace "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--values")]),a._v(" - kubed appscode/kubed "),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v("EOF\nimagePullPolicy: Always\nconfig:\n  clusterName: "),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${CLUSTER_FQDN}")]),a._v("\nEOF")]),a._v("\n")])])]),e("p",[a._v("Annotate the wildcard certificate secret. It will allow "),e("code",[a._v("kubed")]),a._v(" to distribute\nit to all namespaces.")]),a._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[a._v("kubectl "),e("span",{pre:!0,attrs:{class:"token function"}},[a._v("wait")]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--timeout")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("5m "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--namespace")]),a._v(" cert-manager "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--for")]),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("condition"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("Ready certificate "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ingress-cert-'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v('"')]),a._v("\nkubectl annotate secret "),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ingress-cert-'),e("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${LETSENCRYPT_ENVIRONMENT}")]),a._v('"')]),a._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-n")]),a._v(" cert-manager kubed.appscode.com/sync"),e("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[a._v('""')]),a._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);