(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{311:function(e,a,s){"use strict";s.r(a);var t=s(8),n=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"amazon-eks-on-aws-fargate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#amazon-eks-on-aws-fargate"}},[e._v("#")]),e._v(" Amazon EKS on AWS Fargate")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/cncf/landscape/7f5b02ecba914a32912e77fc78e1c54d1c2f98ec/hosted_logos/amazon-eks.svg?sanitize=true",alt:"Amazon EKS",title:"Amazon EKS"}})]),e._v(" "),a("p",[e._v("Before starting with the main content, it's necessary to provision\nthe "),a("a",{attrs:{href:"https://aws.amazon.com/eks/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amazon EKS on AWS Fargate"),a("OutboundLink")],1),e._v(" in AWS.")]),e._v(" "),a("h2",{attrs:{id:"requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requirements"}},[e._v("#")]),e._v(" Requirements")]),e._v(" "),a("p",[e._v("If you would like to follow this documents and it's task you will need to set up\nfew environment variables.")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("LETSENCRYPT_ENVIRONMENT")]),e._v(" variable should be one of:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("staging")]),e._v(" - Let’s Encrypt will create testing certificate (not valid)")]),e._v(" "),a("li",[a("code",[e._v("production")]),e._v(" - Let’s Encrypt will create valid certificate (use with care)")])]),e._v(" "),a("p",[a("code",[e._v("BASE_DOMAIN")]),e._v(" contains DNS records for all your Kubernetes clusters. The cluster\nnames will look like "),a("code",[e._v("CLUSTER_NAME")]),e._v("."),a("code",[e._v("BASE_DOMAIN")]),e._v(" ("),a("code",[e._v("k2.k8s.mylabs.dev")]),e._v(").")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Hostname / FQDN definitions")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("BASE_DOMAIN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"k8s.mylabs.dev"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CLUSTER_NAME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"k2"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CLUSTER_FQDN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_NAME}")]),e._v("."),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BASE_DOMAIN}")]),e._v('"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("KUBECONFIG")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${"),a("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PWD")]),e._v("}")]),e._v("/kubeconfig-"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_NAME}")]),e._v(".conf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# * "production" - valid certificates signed by Lets Encrypt ""')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('# * "staging" - not trusted certs signed by Lets Encrypt "Fake LE Intermediate X1"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("LETSENCRYPT_ENVIRONMENT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${LETSENCRYPT_ENVIRONMENT"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":-")]),e._v("staging}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MY_EMAIL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"petr.ruzicka@gmail.com"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# AWS Region")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_DEFAULT_REGION")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"eu-central-1"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Tags used to tag the AWS resources")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("TAGS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Owner='),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${MY_EMAIL}")]),e._v(' Environment=Dev Tribe=Cloud_Native Squad=Cloud_Container_Platform"')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-e")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${MY_EMAIL}")]),e._v(" | "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${LETSENCRYPT_ENVIRONMENT}")]),e._v(" | "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_NAME}")]),e._v(" | "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BASE_DOMAIN}")]),e._v(" | "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_FQDN}")]),a("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[e._v("\\n")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${TAGS}")]),e._v('"')]),e._v("\n")])])]),a("p",[e._v('Prepare GitHub OAuth "access" credentials ans AWS "access" variables.')]),e._v(" "),a("p",[e._v("You will need to configure AWS CLI: "),a("a",{attrs:{href:"https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-configure.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Configuring the AWS CLI"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# AWS Credentials")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_ACCESS_KEY_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_SECRET_ACCESS_KEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n")])])]),a("h2",{attrs:{id:"prepare-the-local-working-environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prepare-the-local-working-environment"}},[e._v("#")]),e._v(" Prepare the local working environment")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("You can skip these steps if you have all the required software already\ninstalled.")])]),e._v(" "),a("p",[e._v("Install necessary software:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-x")]),e._v(" /usr/bin/apt-get "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt")]),e._v(" update "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-qq")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DEBIAN_FRONTEND")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("noninteractive "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("apt-get")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-y")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-qq")]),e._v(" ansible awscli "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("Install "),a("a",{attrs:{href:"https://github.com/kubernetes/kubectl",target:"_blank",rel:"noopener noreferrer"}},[e._v("kubectl"),a("OutboundLink")],1),e._v(" binary:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-x")]),e._v(" /usr/local/bin/kubectl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# https://github.com/kubernetes/kubectl/releases")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-s")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-Lo")]),e._v(" /usr/local/bin/kubectl "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://storage.googleapis.com/kubernetes-release/release/v1.19.5/bin/'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s/./\\L&/g"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('/amd64/kubectl"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" a+x /usr/local/bin/kubectl\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("Install "),a("a",{attrs:{href:"https://helm.sh/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Helm"),a("OutboundLink")],1),e._v(":")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-x")]),e._v(" /usr/local/bin/helm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# https://github.com/helm/helm/releases")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-s")]),e._v(" https://raw.githubusercontent.com/helm/helm/master/scripts/get "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("bash")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-s")]),e._v(" -- "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--version")]),e._v(" v3.4.0\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("Install "),a("a",{attrs:{href:"https://eksctl.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("eksctl"),a("OutboundLink")],1),e._v(":")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-x")]),e._v(" /usr/local/bin/eksctl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# https://github.com/weaveworks/eksctl/releases")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-s")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-L")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://github.com/weaveworks/eksctl/releases/download/0.34.0/eksctl_'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('_amd64.tar.gz"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("tar")]),e._v(" xz "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-C")]),e._v(" /usr/local/bin/\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("p",[e._v("Install "),a("a",{attrs:{href:"https://github.com/kubernetes-sigs/aws-iam-authenticator",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS IAM Authenticator for Kubernetes"),a("OutboundLink")],1),e._v(":")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("if")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-x")]),e._v(" /usr/local/bin/aws-iam-authenticator "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("then")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# https://docs.aws.amazon.com/eks/latest/userguide/install-aws-iam-authenticator.html")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-s")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-Lo")]),e._v(" /usr/local/bin/aws-iam-authenticator "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("uname")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sed")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"s/./\\L&/g"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('/amd64/aws-iam-authenticator"')]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sudo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("chmod")]),e._v(" a+x /usr/local/bin/aws-iam-authenticator\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("fi")]),e._v("\n")])])]),a("h2",{attrs:{id:"configure-aws-route-53-domain-delegation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configure-aws-route-53-domain-delegation"}},[e._v("#")]),e._v(" Configure AWS Route 53 Domain delegation")]),e._v(" "),a("p",[e._v("Create DNS zone ("),a("code",[e._v("BASE_DOMAIN")]),e._v("):")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("aws route53 create-hosted-zone "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output")]),e._v(" json "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--name")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BASE_DOMAIN}")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --caller-reference "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("date")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --hosted-zone-config"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{'),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v("Comment"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v(": "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v("Created by "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${MY_EMAIL}")]),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v(", "),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v("PrivateZone"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v(': false}"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq\n")])])]),a("p",[e._v('Use your domain registrar to change the nameservers for your zone (for example\n"mylabs.dev") to use the Amazon Route 53 nameservers. Here is the way how you\ncan find out the the Route 53 nameservers:')]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NEW_ZONE_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("aws route53 list-hosted-zones "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--query")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"HostedZones[?Name==\\'),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")]),e._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("BASE_DOMAIN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("`")])]),e._v('].Id"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output")]),e._v(" text"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NEW_ZONE_NS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("aws route53 get-hosted-zone "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--output")]),e._v(" json "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--id")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${NEW_ZONE_ID}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--query")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"DelegationSet.NameServers"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NEW_ZONE_NS1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${NEW_ZONE_NS}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('".[0]"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("NEW_ZONE_NS2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${NEW_ZONE_NS}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('".[1]"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),a("p",[e._v("Create the NS record in "),a("code",[e._v("k8s.mylabs.dev")]),e._v(" ("),a("code",[e._v("BASE_DOMAIN")]),e._v(") for proper zone\ndelegation. This step depends on your domain registrar - I'm using CloudFlare\nand using Ansible to automate it:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("ansible "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-m")]),e._v(" cloudflare_dns "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("local")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"localhost,"')]),e._v(" localhost "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-a")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"zone=mylabs.dev record='),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BASE_DOMAIN}")]),e._v(" type=NS value="),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${NEW_ZONE_NS1}")]),e._v(" solo=true proxied=no account_email="),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLOUDFLARE_EMAIL}")]),e._v(" account_api_token="),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLOUDFLARE_API_KEY}")]),e._v('"')]),e._v("\nansible "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-m")]),e._v(" cloudflare_dns "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-c")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("local")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-i")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"localhost,"')]),e._v(" localhost "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-a")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"zone=mylabs.dev record='),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BASE_DOMAIN}")]),e._v(" type=NS value="),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${NEW_ZONE_NS2}")]),e._v(" solo=false proxied=no account_email="),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLOUDFLARE_EMAIL}")]),e._v(" account_api_token="),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLOUDFLARE_API_KEY}")]),e._v('"')]),e._v("\n")])])]),a("p",[e._v("Output:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('localhost | CHANGED => {\n    "ansible_facts": {\n        "discovered_interpreter_python": "/usr/bin/python"\n    },\n    "changed": true,\n    "result": {\n        "record": {\n            "content": "ns-885.awsdns-46.net",\n            "created_on": "2020-11-13T06:25:32.18642Z",\n            "id": "dxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxb",\n            "locked": false,\n            "meta": {\n                "auto_added": false,\n                "managed_by_apps": false,\n                "managed_by_argo_tunnel": false,\n                "source": "primary"\n            },\n            "modified_on": "2020-11-13T06:25:32.18642Z",\n            "name": "k8s.mylabs.dev",\n            "proxiable": false,\n            "proxied": false,\n            "ttl": 1,\n            "type": "NS",\n            "zone_id": "2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxe",\n            "zone_name": "mylabs.dev"\n        }\n    }\n}\nlocalhost | CHANGED => {\n    "ansible_facts": {\n        "discovered_interpreter_python": "/usr/bin/python"\n    },\n    "changed": true,\n    "result": {\n        "record": {\n            "content": "ns-1692.awsdns-19.co.uk",\n            "created_on": "2020-11-13T06:25:37.605605Z",\n            "id": "9xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxb",\n            "locked": false,\n            "meta": {\n                "auto_added": false,\n                "managed_by_apps": false,\n                "managed_by_argo_tunnel": false,\n                "source": "primary"\n            },\n            "modified_on": "2020-11-13T06:25:37.605605Z",\n            "name": "k8s.mylabs.dev",\n            "proxiable": false,\n            "proxied": false,\n            "ttl": 1,\n            "type": "NS",\n            "zone_id": "2xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxe",\n            "zone_name": "mylabs.dev"\n        }\n    }\n}\n')])])]),a("h2",{attrs:{id:"add-new-domain-to-route-53-and-policies"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-new-domain-to-route-53-and-policies"}},[e._v("#")]),e._v(" Add new domain to Route 53 and Policies")]),e._v(" "),a("p",[e._v("Details with examples are described on these links:")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://cert-manager.io/docs/configuration/acme/dns01/route53/",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://cert-manager.io/docs/configuration/acme/dns01/route53/"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/aws.md"),a("OutboundLink")],1)])]),e._v(" "),a("p",[e._v("Create CloudFormation template containing policies for Route53, S3 access\n(Harbor) and Domain. AWS IAM Policy "),a("code",[e._v("${ClusterFQDN}-AmazonRoute53Domains")]),e._v("\nallows "),a("code",[e._v("cert-manager")]),e._v(" and "),a("code",[e._v("external-dns")]),e._v(" to modify the Route 53 entries.\nPut new domain "),a("code",[e._v("CLUSTER_FQDN")]),e._v(" to the Route 53 and configure the\nDNS delegation from the "),a("code",[e._v("BASE_DOMAIN")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-d")]),e._v(" tmp "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("||")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("mkdir")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-v")]),e._v(" tmp\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cat")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" tmp/aws_policies.yml "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("EOF\nDescription: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Template to generate the necessary Route53 Policies for access to Route53 and create EFS"')]),e._v("\nParameters:\n  ClusterFQDN:\n    Description: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Cluster domain where all necessary app subdomains will live (subdomain of BaseDomain). Ex: k1.k8s.mylabs.dev"')]),e._v("\n    Type: String\n  BaseDomain:\n    Description: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Base domain where cluster domains + their subdomains will live. Ex: k8s.mylabs.dev"')]),e._v("\n    Type: String\nResources:\n  Route53Policy:\n    Type: AWS::IAM::ManagedPolicy\n    Properties:\n      ManagedPolicyName: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ClusterFQDN}")]),e._v('-AmazonRoute53Domains"')]),e._v("\n      Description: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Policy required by cert-manager or external-dns to be able to modify Route 53 entries for '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ClusterFQDN}")]),e._v('"')]),e._v("\n      PolicyDocument:\n        Version: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2012-10-17"')]),e._v("\n        Statement:\n        - Effect: Allow\n          Action:\n          - route53:GetChange\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"arn:aws:route53:::change/*"')]),e._v("\n        - Effect: Allow\n          Action:\n          - route53:ChangeResourceRecordSets\n          - route53:ListResourceRecordSets\n          Resource: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"arn:aws:route53:::hostedzone/'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${HostedZone.Id}")]),e._v('"')]),e._v("\n        - Effect: Allow\n          Action:\n          - route53:ListHostedZones\n          - route53:ListHostedZonesByName\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n  HostedZone:\n    Type: AWS::Route53::HostedZone\n    Properties:\n      Name: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Ref ClusterFQDN\n  RecordSet:\n    Type: AWS::Route53::RecordSet\n    Properties:\n      HostedZoneName: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BaseDomain}")]),e._v('."')]),e._v("\n      Name: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Ref ClusterFQDN\n      Type: NS\n      TTL: "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("60")]),e._v("\n      ResourceRecords: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("GetAtt HostedZone.NameServers\n  CloudWatchPolicy:\n    Type: AWS::IAM::ManagedPolicy\n    Properties:\n      ManagedPolicyName: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ClusterFQDN}")]),e._v('-CloudWatch"')]),e._v("\n      Description: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Policy required by Fargate to log to CloudWatch for '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ClusterFQDN}")]),e._v('"')]),e._v("\n      PolicyDocument:\n        Version: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2012-10-17"')]),e._v("\n        Statement:\n        - Effect: Allow\n          Action:\n          - logs:CreateLogStream\n          - logs:CreateLogGroup\n          - logs:DescribeLogStreams\n          - logs:PutLogEvents\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n  AWSLoadBalancerControllerPolicy:\n    Type: AWS::IAM::ManagedPolicy\n    Properties:\n      ManagedPolicyName: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ClusterFQDN}")]),e._v('-AWSLoadBalancerControllerPolicy"')]),e._v("\n      Description: "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("!")]),e._v("Sub "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Policy required by AWS LoadBalancer Controller for '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ClusterFQDN}")]),e._v('"')]),e._v("\n      PolicyDocument:\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# https://github.com/kubernetes-sigs/aws-load-balancer-controller/blob/main/docs/install/iam_policy.json")]),e._v("\n        Version: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"2012-10-17"')]),e._v("\n        Statement:\n        - Effect: Allow\n          Action:\n          - iam:CreateServiceLinkedRole\n          - ec2:DescribeAccountAttributes\n          - ec2:DescribeAddresses\n          - ec2:DescribeInternetGateways\n          - ec2:DescribeVpcs\n          - ec2:DescribeSubnets\n          - ec2:DescribeSecurityGroups\n          - ec2:DescribeInstances\n          - ec2:DescribeNetworkInterfaces\n          - ec2:DescribeTags\n          - elasticloadbalancing:DescribeLoadBalancers\n          - elasticloadbalancing:DescribeLoadBalancerAttributes\n          - elasticloadbalancing:DescribeListeners\n          - elasticloadbalancing:DescribeListenerCertificates\n          - elasticloadbalancing:DescribeSSLPolicies\n          - elasticloadbalancing:DescribeRules\n          - elasticloadbalancing:DescribeTargetGroups\n          - elasticloadbalancing:DescribeTargetGroupAttributes\n          - elasticloadbalancing:DescribeTargetHealth\n          - elasticloadbalancing:DescribeTags\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n        - Effect: Allow\n          Action:\n          - cognito-idp:DescribeUserPoolClient\n          - acm:ListCertificates\n          - acm:DescribeCertificate\n          - iam:ListServerCertificates\n          - iam:GetServerCertificate\n          - waf-regional:GetWebACL\n          - waf-regional:GetWebACLForResource\n          - waf-regional:AssociateWebACL\n          - waf-regional:DisassociateWebACL\n          - wafv2:GetWebACL\n          - wafv2:GetWebACLForResource\n          - wafv2:AssociateWebACL\n          - wafv2:DisassociateWebACL\n          - shield:GetSubscriptionState\n          - shield:DescribeProtection\n          - shield:CreateProtection\n          - shield:DeleteProtection\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n        - Effect: Allow\n          Action:\n          - ec2:AuthorizeSecurityGroupIngress\n          - ec2:RevokeSecurityGroupIngress\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n        - Effect: Allow\n          Action:\n          - ec2:CreateSecurityGroup\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n        - Effect: Allow\n          Action:\n          - ec2:CreateTags\n          Resource: arn:aws:ec2:*:*:security-group/*\n          Condition:\n            StringEquals:\n              ec2:CreateAction: CreateSecurityGroup\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Null"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v("\n              aws:RequestTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"false"')]),e._v("\n        - Effect: Allow\n          Action:\n          - ec2:CreateTags\n          - ec2:DeleteTags\n          Resource: arn:aws:ec2:*:*:security-group/*\n          Condition:\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Null"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v("\n              aws:RequestTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"true"')]),e._v("\n              aws:ResourceTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"false"')]),e._v("\n        - Effect: Allow\n          Action:\n          - ec2:AuthorizeSecurityGroupIngress\n          - ec2:RevokeSecurityGroupIngress\n          - ec2:DeleteSecurityGroup\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n          Condition:\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Null"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v("\n              aws:ResourceTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"false"')]),e._v("\n        - Effect: Allow\n          Action:\n          - elasticloadbalancing:CreateLoadBalancer\n          - elasticloadbalancing:CreateTargetGroup\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n          Condition:\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Null"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v("\n              aws:RequestTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"false"')]),e._v("\n        - Effect: Allow\n          Action:\n          - elasticloadbalancing:CreateListener\n          - elasticloadbalancing:DeleteListener\n          - elasticloadbalancing:CreateRule\n          - elasticloadbalancing:DeleteRule\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n        - Effect: Allow\n          Action:\n          - elasticloadbalancing:AddTags\n          - elasticloadbalancing:RemoveTags\n          Resource:\n          - arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\n          - arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\n          - arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\n          Condition:\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Null"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v("\n              aws:RequestTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"true"')]),e._v("\n              aws:ResourceTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"false"')]),e._v("\n        - Effect: Allow\n          Action:\n          - elasticloadbalancing:ModifyLoadBalancerAttributes\n          - elasticloadbalancing:SetIpAddressType\n          - elasticloadbalancing:SetSecurityGroups\n          - elasticloadbalancing:SetSubnets\n          - elasticloadbalancing:DeleteLoadBalancer\n          - elasticloadbalancing:ModifyTargetGroup\n          - elasticloadbalancing:ModifyTargetGroupAttributes\n          - elasticloadbalancing:DeleteTargetGroup\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\n          Condition:\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Null"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),e._v("\n              aws:ResourceTag/elbv2.k8s.aws/cluster: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"false"')]),e._v("\n        - Effect: Allow\n          Action:\n          - elasticloadbalancing:RegisterTargets\n          - elasticloadbalancing:DeregisterTargets\n          Resource: arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\n        - Effect: Allow\n          Action:\n          - elasticloadbalancing:SetWebAcl\n          - elasticloadbalancing:ModifyListener\n          - elasticloadbalancing:AddListenerCertificates\n          - elasticloadbalancing:RemoveListenerCertificates\n          - elasticloadbalancing:ModifyRule\n          Resource: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"*"')]),e._v("\nOutputs:\n  Route53Policy:\n    Description: The ARN of the created Route53Policy\n    Value:\n      Ref: Route53Policy\n    Export:\n      Name:\n        Fn::Sub: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("StackName}")]),e._v('-Route53Policy"')]),e._v("\n  HostedZone:\n    Description: The ARN of the created Route53 Zone "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" K8s cluster\n    Value:\n      Ref: HostedZone\n    Export:\n      Name:\n        Fn::Sub: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("StackName}")]),e._v('-HostedZone"')]),e._v("\n  CloudWatchPolicy:\n    Description: The ARN of the created CloudWatchPolicy\n    Value:\n      Ref: CloudWatchPolicy\n    Export:\n      Name:\n        Fn::Sub: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("StackName}")]),e._v('-CloudWatchPolicy"')]),e._v("\n  AWSLoadBalancerControllerPolicy:\n    Description: The ARN of the created AWSLoadBalancerControllerPolicy\n    Value:\n      Ref: AWSLoadBalancerControllerPolicy\n    Export:\n      Name:\n        Fn::Sub: "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v("StackName}")]),e._v('-AWSLoadBalancerControllerPolicy"')]),e._v("\n\nEOF\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("eval")]),e._v(" aws cloudformation deploy "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--capabilities")]),e._v(" CAPABILITY_NAMED_IAM "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --parameter-overrides "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"ClusterFQDN='),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_FQDN}")]),e._v(" BaseDomain="),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${BASE_DOMAIN}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --stack-name "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_NAME}")]),e._v('-route53-cloudwatch"')]),e._v(" --template-file tmp/aws_policies.yml "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--tags")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${TAGS}")]),e._v('"')]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_CLOUDFORMATION_DETAILS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("aws cloudformation describe-stacks --stack-name "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_NAME}")]),e._v('-route53-cloudwatch"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("ROUTE53_POLICY_ARN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS_CLOUDFORMATION_DETAILS}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('".Stacks[0].Outputs[] | select(.OutputKey=='),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v("Route53Policy"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v(') .OutputValue"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CLOUDWATCH_POLICY_ARN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS_CLOUDFORMATION_DETAILS}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('".Stacks[0].Outputs[] | select(.OutputKey=='),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v("CloudWatchPolicy"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v(') .OutputValue"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWSLOADBALANCERCONTROLLER_POLICY_ARN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS_CLOUDFORMATION_DETAILS}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('".Stacks[0].Outputs[] | select(.OutputKey=='),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v("AWSLoadBalancerControllerPolicy"),a("span",{pre:!0,attrs:{class:"token entity",title:'\\"'}},[e._v('\\"')]),e._v(') .OutputValue"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),a("h2",{attrs:{id:"create-amazon-eks"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-amazon-eks"}},[e._v("#")]),e._v(" Create Amazon EKS")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/aws-samples/eks-workshop/65b766c494a5b4f5420b2912d8373c4957163541/static/images/3-service-animated.gif",alt:"EKS",title:"EKS"}})]),e._v(" "),a("p",[e._v("Create "),a("a",{attrs:{href:"https://aws.amazon.com/eks/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Amazon EKS"),a("OutboundLink")],1),e._v(" in AWS by using "),a("a",{attrs:{href:"https://eksctl.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("eksctl"),a("OutboundLink")],1),e._v(".\nIt's a tool from Weaveworks based on official\nAWS CloudFormation templates which will be used to launch and configure our\nAmazon EKS on AWS Fargate cluster.")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/weaveworks/eksctl/c365149fc1a0b8d357139cbd6cda5aee8841c16c/logo/eksctl.png",alt:"eksctl",title:"eksctl"}})]),e._v(" "),a("p",[e._v("Create the Amazon EKS cluster using "),a("code",[e._v("eksctl")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("eksctl create cluster --config-file - "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--kubeconfig")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${KUBECONFIG}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF\n# https://eksctl.io/usage/schema/\napiVersion: eksctl.io/v1alpha5\nkind: ClusterConfig\n\nmetadata:\n  name: "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_NAME}")]),e._v("\n  region: "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS_DEFAULT_REGION}")]),e._v('\n  version: "1.18"\n  tags: &tags\n    Owner: '),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${MY_EMAIL}")]),e._v("\n    Environment: Dev\n    Tribe: Cloud_Native\n    Squad: Cloud_Container_Platform\n\navailabilityZones:\n  - "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS_DEFAULT_REGION}")]),e._v("a\n  - "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS_DEFAULT_REGION}")]),e._v("b\n\niam:\n  withOIDC: true\n  serviceAccounts:\n    - metadata:\n        name: cert-manager\n        namespace: cert-manager\n      attachPolicyARNs:\n        - "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ROUTE53_POLICY_ARN}")]),e._v("\n    - metadata:\n        name: external-dns\n        namespace: external-dns\n      attachPolicyARNs:\n        - "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${ROUTE53_POLICY_ARN}")]),e._v("\n    - metadata:\n        name: aws-load-balancer-controller\n        namespace: kube-system\n      attachPolicyARNs:\n        - "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWSLOADBALANCERCONTROLLER_POLICY_ARN}")]),e._v('\n\nfargateProfiles:\n  - name: fargate-default\n    selectors:\n      - namespace: default\n      - namespace: kube-system\n    tags: *tags\n  # - name: fargate-cert-manager\n  #   selectors:\n  #     - namespace: cert-manager\n  #   tags: *tags\n  # - name: fargate-external-dns\n  #   selectors:\n  #     - namespace: external-dns\n  #   tags: *tags\n  # - name: fargate-kubed\n  #   selectors:\n  #     - namespace: kubed\n  #   tags: *tags\n\ncloudWatch:\n  clusterLogging:\n     enableTypes: ["audit", "authenticator", "controllerManager"]\nEOF')]),e._v("\n")])])]),a("p",[e._v("Output:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('[ℹ]  eksctl version 0.35.0\n[ℹ]  using region eu-central-1\n[ℹ]  subnets for eu-central-1a - public:192.168.0.0/19 private:192.168.64.0/19\n[ℹ]  subnets for eu-central-1b - public:192.168.32.0/19 private:192.168.96.0/19\n[ℹ]  using Kubernetes version 1.18\n[ℹ]  creating EKS cluster "k2" in "eu-central-1" region with Fargate profile\n[ℹ]  will create a CloudFormation stack for cluster itself and 0 nodegroup stack(s)\n[ℹ]  will create a CloudFormation stack for cluster itself and 0 managed nodegroup stack(s)\n[ℹ]  if you encounter any issues, check CloudFormation console or try \'eksctl utils describe-stacks --region=eu-central-1 --cluster=k2\'\n[ℹ]  Kubernetes API endpoint access will use default of {publicAccess=true, privateAccess=false} for cluster "k2" in "eu-central-1"\n[ℹ]  2 sequential tasks: { create cluster control plane "k2", 2 sequential sub-tasks: { 6 sequential sub-tasks: { tag cluster, update CloudWatch logging configuration, create fargate profiles, associate IAM OIDC provider, 4 parallel sub-tasks: { 2 sequential sub-tasks: { create IAM role for serviceaccount "cert-manager/cert-manager", create serviceaccount "cert-manager/cert-manager" }, 2 sequential sub-tasks: { create IAM role for serviceaccount "external-dns/external-dns", create serviceaccount "external-dns/external-dns" }, 2 sequential sub-tasks: { create IAM role for serviceaccount "kube-system/aws-load-balancer-controller", create serviceaccount "kube-system/aws-load-balancer-controller" }, 2 sequential sub-tasks: { create IAM role for serviceaccount "kube-system/aws-node", create serviceaccount "kube-system/aws-node" } }, restart daemonset "kube-system/aws-node" }, create addons } }\n[ℹ]  building cluster stack "eksctl-k2-cluster"\n[ℹ]  deploying stack "eksctl-k2-cluster"\n[✔]  tagged EKS cluster (Environment=Dev, Owner=petr.ruzicka@gmail.com, Squad=Cloud_Container_Platform, Tribe=Cloud_Native)\n[✔]  configured CloudWatch logging for cluster "k2" in "eu-central-1" (enabled types: audit, authenticator, controllerManager &amp; disabled types: api, scheduler)\n[ℹ]  creating Fargate profile "fargate-default" on EKS cluster "k2"\n[ℹ]  created Fargate profile "fargate-default" on EKS cluster "k2"\n[ℹ]  "coredns" is now schedulable onto Fargate\n[ℹ]  "coredns" is now scheduled onto Fargate\n[ℹ]  "coredns" pods are now scheduled onto Fargate\n[ℹ]  building iamserviceaccount stack "eksctl-k2-addon-iamserviceaccount-external-dns-external-dns"\n[ℹ]  building iamserviceaccount stack "eksctl-k2-addon-iamserviceaccount-kube-system-aws-node"\n[ℹ]  building iamserviceaccount stack "eksctl-k2-addon-iamserviceaccount-cert-manager-cert-manager"\n[ℹ]  building iamserviceaccount stack "eksctl-k2-addon-iamserviceaccount-kube-system-aws-load-balancer-controller"\n[ℹ]  deploying stack "eksctl-k2-addon-iamserviceaccount-kube-system-aws-load-balancer-controller"\n[ℹ]  deploying stack "eksctl-k2-addon-iamserviceaccount-cert-manager-cert-manager"\n[ℹ]  deploying stack "eksctl-k2-addon-iamserviceaccount-external-dns-external-dns"\n[ℹ]  deploying stack "eksctl-k2-addon-iamserviceaccount-kube-system-aws-node"\n[ℹ]  created serviceaccount "kube-system/aws-load-balancer-controller"\n[ℹ]  created namespace "external-dns"\n[ℹ]  created serviceaccount "external-dns/external-dns"\n[ℹ]  serviceaccount "kube-system/aws-node" already exists\n[ℹ]  updated serviceaccount "kube-system/aws-node"\n[ℹ]  created namespace "cert-manager"\n[ℹ]  created serviceaccount "cert-manager/cert-manager"\n[ℹ]  daemonset "kube-system/aws-node" restarted\n[ℹ]  waiting for the control plane availability...\n[✔]  saved kubeconfig as "/Users/ruzickap/git/k8s-fargate-eks/kubeconfig-k2.conf"\n[ℹ]  no tasks\n[✔]  all EKS cluster resources for "k2" have been created\n[ℹ]  kubectl command should work with "/Users/ruzickap/git/k8s-fargate-eks/kubeconfig-k2.conf", try \'kubectl --kubeconfig=/Users/ruzickap/git/k8s-fargate-eks/kubeconfig-k2.conf get nodes\'\n[✔]  EKS cluster "k2" in "eu-central-1" region is ready\n')])])]),a("p",[e._v("Remove namespaces with serviceaccounts created by "),a("code",[e._v("eksctl")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("kubectl delete serviceaccount "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-n")]),e._v(" kube-system cert-manager\nkubectl delete serviceaccount "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-n")]),e._v(" kube-system external-dns\n")])])]),a("p",[e._v("Check the nodes:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl describe nodes\n")])])]),a("p",[e._v("Output:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Name:               fargate-ip-192-168-105-82.eu-central-1.compute.internal\nRoles:              &lt;none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    eks.amazonaws.com/compute-type=fargate\n                    failure-domain.beta.kubernetes.io/region=eu-central-1\n                    failure-domain.beta.kubernetes.io/zone=eu-central-1b\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-192-168-105-82.eu-central-1.compute.internal\n                    kubernetes.io/os=linux\n                    topology.kubernetes.io/region=eu-central-1\n                    topology.kubernetes.io/zone=eu-central-1b\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 02 Jan 2021 11:13:17 +0100\nTaints:             eks.amazonaws.com/compute-type=fargate:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  fargate-ip-192-168-105-82.eu-central-1.compute.internal\n  AcquireTime:     &lt;unset>\n  RenewTime:       Sat, 02 Jan 2021 11:15:17 +0100\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Sat, 02 Jan 2021 11:13:47 +0100   Sat, 02 Jan 2021 11:13:17 +0100   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Sat, 02 Jan 2021 11:13:47 +0100   Sat, 02 Jan 2021 11:13:17 +0100   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Sat, 02 Jan 2021 11:13:47 +0100   Sat, 02 Jan 2021 11:13:17 +0100   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Sat, 02 Jan 2021 11:13:47 +0100   Sat, 02 Jan 2021 11:13:27 +0100   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:   192.168.105.82\n  InternalDNS:  ip-192-168-105-82.eu-central-1.compute.internal\n  Hostname:     ip-192-168-105-82.eu-central-1.compute.internal\nCapacity:\n  attachable-volumes-aws-ebs:  39\n  cpu:                         2\n  ephemeral-storage:           30832548Ki\n  hugepages-1Gi:               0\n  hugepages-2Mi:               0\n  memory:                      15649708Ki\n  pods:                        1\nAllocatable:\n  attachable-volumes-aws-ebs:  39\n  cpu:                         2\n  ephemeral-storage:           28415276190\n  hugepages-1Gi:               0\n  hugepages-2Mi:               0\n  memory:                      15547308Ki\n  pods:                        1\nSystem Info:\n  Machine ID:\n  System UUID:                EC2C7130-59B9-D75C-F44C-2CCFAD69C864\n  Boot ID:                    e2e285fa-b723-4c1c-84c2-10c680f0c0d3\n  Kernel Version:             4.14.209-160.335.amzn2.x86_64\n  OS Image:                   Amazon Linux 2\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.3.2\n  Kubelet Version:            v1.18.8-eks-7c9bda\n  Kube-Proxy Version:         v1.18.8-eks-7c9bda\nProviderID:                   aws:///eu-central-1b/7b1974769e-0d7cb3f0582c4079908372a2c1d80b16/fargate-ip-192-168-105-82.eu-central-1.compute.internal\nNon-terminated Pods:          (1 in total)\n  Namespace                   Name                        CPU Requests  CPU Limits  Memory Requests  Memory Limits  AGE\n  ---------                   ----                        ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-7c5b55f765-kx2sr    100m (5%)     0 (0%)      70Mi (0%)        170Mi (1%)     2m52s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource                    Requests   Limits\n  --------                    --------   ------\n  cpu                         100m (5%)  0 (0%)\n  memory                      70Mi (0%)  170Mi (1%)\n  ephemeral-storage           0 (0%)     0 (0%)\n  hugepages-1Gi               0 (0%)     0 (0%)\n  hugepages-2Mi               0 (0%)     0 (0%)\n  attachable-volumes-aws-ebs  0          0\nEvents:\n  Type     Reason                   Age                  From     Message\n  ----     ------                   ----                 ----     -------\n  Normal   Starting                 2m1s                 kubelet  Starting kubelet.\n  Warning  InvalidDiskCapacity      2m1s                 kubelet  invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  2m1s (x2 over 2m1s)  kubelet  Node fargate-ip-192-168-105-82.eu-central-1.compute.internal status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    2m1s (x2 over 2m1s)  kubelet  Node fargate-ip-192-168-105-82.eu-central-1.compute.internal status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     2m1s (x2 over 2m1s)  kubelet  Node fargate-ip-192-168-105-82.eu-central-1.compute.internal status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  2m1s                 kubelet  Updated Node Allocatable limit across pods\n  Normal   NodeReady                111s                 kubelet  Node fargate-ip-192-168-105-82.eu-central-1.compute.internal status is now: NodeReady\n\n\nName:               fargate-ip-192-168-124-70.eu-central-1.compute.internal\nRoles:              &lt;none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    eks.amazonaws.com/compute-type=fargate\n                    failure-domain.beta.kubernetes.io/region=eu-central-1\n                    failure-domain.beta.kubernetes.io/zone=eu-central-1b\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-192-168-124-70.eu-central-1.compute.internal\n                    kubernetes.io/os=linux\n                    topology.kubernetes.io/region=eu-central-1\n                    topology.kubernetes.io/zone=eu-central-1b\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 02 Jan 2021 11:13:07 +0100\nTaints:             eks.amazonaws.com/compute-type=fargate:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  fargate-ip-192-168-124-70.eu-central-1.compute.internal\n  AcquireTime:     &lt;unset>\n  RenewTime:       Sat, 02 Jan 2021 11:15:17 +0100\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Sat, 02 Jan 2021 11:13:37 +0100   Sat, 02 Jan 2021 11:13:05 +0100   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Sat, 02 Jan 2021 11:13:37 +0100   Sat, 02 Jan 2021 11:13:05 +0100   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Sat, 02 Jan 2021 11:13:37 +0100   Sat, 02 Jan 2021 11:13:05 +0100   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Sat, 02 Jan 2021 11:13:37 +0100   Sat, 02 Jan 2021 11:13:17 +0100   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:   192.168.124.70\n  InternalDNS:  ip-192-168-124-70.eu-central-1.compute.internal\n  Hostname:     ip-192-168-124-70.eu-central-1.compute.internal\nCapacity:\n  attachable-volumes-aws-ebs:  39\n  cpu:                         2\n  ephemeral-storage:           30832548Ki\n  hugepages-1Gi:               0\n  hugepages-2Mi:               0\n  memory:                      15649708Ki\n  pods:                        1\nAllocatable:\n  attachable-volumes-aws-ebs:  39\n  cpu:                         2\n  ephemeral-storage:           28415276190\n  hugepages-1Gi:               0\n  hugepages-2Mi:               0\n  memory:                      15547308Ki\n  pods:                        1\nSystem Info:\n  Machine ID:\n  System UUID:                EC22AB0C-4298-1C2A-14A2-F8A5D6E468AC\n  Boot ID:                    af1a037c-80a3-4bfa-a8bb-265e8f4c8a75\n  Kernel Version:             4.14.209-160.335.amzn2.x86_64\n  OS Image:                   Amazon Linux 2\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.3.2\n  Kubelet Version:            v1.18.8-eks-7c9bda\n  Kube-Proxy Version:         v1.18.8-eks-7c9bda\nProviderID:                   aws:///eu-central-1b/7b1974769e-d83c17722dfc47ada789fa9fed2a89b4/fargate-ip-192-168-124-70.eu-central-1.compute.internal\nNon-terminated Pods:          (1 in total)\n  Namespace                   Name                        CPU Requests  CPU Limits  Memory Requests  Memory Limits  AGE\n  ---------                   ----                        ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-7c5b55f765-dwzb8    100m (5%)     0 (0%)      70Mi (0%)        170Mi (1%)     2m52s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource                    Requests   Limits\n  --------                    --------   ------\n  cpu                         100m (5%)  0 (0%)\n  memory                      70Mi (0%)  170Mi (1%)\n  ephemeral-storage           0 (0%)     0 (0%)\n  hugepages-1Gi               0 (0%)     0 (0%)\n  hugepages-2Mi               0 (0%)     0 (0%)\n  attachable-volumes-aws-ebs  0          0\nEvents:\n  Type     Reason                   Age                    From     Message\n  ----     ------                   ----                   ----     -------\n  Normal   Starting                 2m13s                  kubelet  Starting kubelet.\n  Warning  InvalidDiskCapacity      2m13s                  kubelet  invalid capacity 0 on image filesystem\n  Normal   NodeHasSufficientMemory  2m13s (x2 over 2m13s)  kubelet  Node fargate-ip-192-168-124-70.eu-central-1.compute.internal status is now: NodeHasSufficientMemory\n  Normal   NodeHasNoDiskPressure    2m13s (x2 over 2m13s)  kubelet  Node fargate-ip-192-168-124-70.eu-central-1.compute.internal status is now: NodeHasNoDiskPressure\n  Normal   NodeHasSufficientPID     2m13s (x2 over 2m13s)  kubelet  Node fargate-ip-192-168-124-70.eu-central-1.compute.internal status is now: NodeHasSufficientPID\n  Normal   NodeAllocatableEnforced  2m13s                  kubelet  Updated Node Allocatable limit across pods\n  Normal   NodeReady                2m1s                   kubelet  Node fargate-ip-192-168-124-70.eu-central-1.compute.internal status is now: NodeReady\n")])])]),a("p",[e._v("Check the pods:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl get pods --all-namespaces\n")])])]),a("p",[e._v("Output:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NAMESPACE     NAME                       READY   STATUS    RESTARTS   AGE\nkube-system   coredns-7c5b55f765-dwzb8   1/1     Running   0          2m52s\nkube-system   coredns-7c5b55f765-kx2sr   1/1     Running   0          2m52s\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("In case of Amazon EKS on AWS Fargate every pod is running on single node.")])]),e._v(" "),a("p",[e._v("Attach the policy to the "),a("a",{attrs:{href:"https://docs.aws.amazon.com/eks/latest/userguide/pod-execution-role.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("pod execution role"),a("OutboundLink")],1),e._v("\nof your EKS on Fargate cluster:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CLUSTER_ARN")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("eksctl get iamidentitymapping "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--cluster")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_NAME}")]),e._v('"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-o")]),e._v(" json "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('".[].rolearn"')]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\naws iam attach-role-policy --policy-arn "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLOUDWATCH_POLICY_ARN}")]),e._v('"')]),e._v(" --role-name "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_ARN"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("#")]),e._v("*"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("/")]),e._v("}")]),e._v('"')]),e._v("\n")])])]),a("p",[e._v("Create the dedicated "),a("code",[e._v("aws-observability")]),e._v(" namespace and the ConfigMap for Fluent Bit:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl apply "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-f")]),e._v(" - "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<<")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("EOF\nkind: Namespace\napiVersion: v1\nmetadata:\n  name: aws-observability\n  labels:\n    aws-observability: enabled\n---\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: aws-logging\n  namespace: aws-observability\ndata:\n  output.conf: |\n    [OUTPUT]\n        Name cloudwatch_logs\n        Match   *\n        region "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${AWS_DEFAULT_REGION}")]),e._v("\n        log_group_name /aws/eks/"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${CLUSTER_FQDN}")]),e._v("/logs\n        log_stream_prefix fluentbit-\n        auto_create_group On\nEOF")]),e._v("\n")])])]),a("p",[e._v("All the Fargate pods should now send the log to CloudWatch...")])])}),[],!1,null,null,null);a.default=n.exports}}]);